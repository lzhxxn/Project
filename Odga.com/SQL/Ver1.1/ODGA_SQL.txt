 <1차적으로 backup.dmp IMPORT 한 후 실행 할 것


--테이블 삭제
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE PLANNER CASCADE CONSTRAINTS;
DROP TABLE S_PLANNER CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE REPLY CASCADE CONSTRAINTS;
DROP TABLE LIKE_T CASCADE CONSTRAINTS;
DROP TABLE SUPPORT CASCADE CONSTRAINTS;
--시쿼스 삭제
DROP SEQUENCE BOARD_ID;
DROP SEQUENCE PLANNER_ID;
DROP SEQUENCE S_PLANNER_ID;
DROP SEQUENCE SUPPORT_ID;
DROP SEQUENCE MEMBER_ID;
DROP SEQUENCE LIKE_ID;
DROP SEQUENCE SUPPORT_ORIGIN_NO;
DROP SEQUENCE REPLY_ID;
-- 게시판
CREATE TABLE BOARD (
      B_ID NUMBER NOT NULL, -- 글id,
      B_WRITER VARCHAR2(20) NOT NULL, -- 작성자,
      B_SUBJECT VARCHAR2(100) NULL, -- 제목,
      B_CONTENT CLOB NULL, -- 내용,
      B_IMG VARCHAR2(100) NULL, -- 메인 이미지
      B_RDATE DATE NULL, -- 작성일,
      B_CATGO VARCHAR2(40) NULL, -- 카테고리
      B_LIKE NUMBER, -- 좋아요수
      M_ID NUMBER, -- 회원id,
      B_REPLY NUMBER
);
-- 게시판
ALTER TABLE BOARD
   ADD CONSTRAINT "PK_BOARD" -- 게시판 기본키
   PRIMARY KEY (
      B_ID -- 글id
   );

CREATE TABLE "LIKE_T" ( --좋아요
      LI_ID NUMBER NOT NULL, --라이크id
      LIKEFLAG number,
      B_ID NUMBER,
      M_ID NUMBER  -- 회원id
);

ALTER TABLE "LIKE_T"
   ADD CONSTRAINT "PK_LIKE_T" 
   PRIMARY KEY (
      "LI_ID" 
   );

-- 플래너
CREATE TABLE "PLANNER" (
      "P_ID" NUMBER NOT NULL, --플랜id
      "P_RDATE" DATE,
      "M_ID" NUMBER  -- 회원id
);

-- 플래너
ALTER TABLE "PLANNER"
   ADD CONSTRAINT "PK_PLANNER" -- 플래너 기본키
   PRIMARY KEY (
      "P_ID" -- 플랜id
   );

-- 세부플래너
CREATE TABLE S_PLANNER (
      SP_ID NUMBER NOT NULL, -- 세부플랜id,
      SP_DAY NUMBER NULL, -- DAY,
      SP_SDAY DATE NULL, -- 시작일,
      SP_EDAY DATE NULL, -- 종료일,
      contentid varchar2(200), -- 관광지id
      P_ID NUMBER -- 플래너id
);

-- 세부플래너
ALTER TABLE "S_PLANNER"
   ADD CONSTRAINT "PK_S_PLANNER" -- 세부플래너 기본키
   PRIMARY KEY (
      "SP_ID" -- 세부플랜id
   );

-- 회원
CREATE TABLE "MEMBER" (
      "M_ID" NUMBER NOT NULL, -- 회원id,
      "M_EMAIL" VARCHAR2(40) NOT NULL, -- 이메일,
      "M_PWD" VARCHAR2(40) NULL, -- 비밀번호
      "M_NAME" VARCHAR2(100) NULL, -- name,
      "M_PHONE" VARCHAR2(30) NULL, -- 전화번호,
      "M_GENDER" VARCHAR(10) NULL, -- 성별,
      "M_BIRTH" DATE NULL, -- 생년월일,
      "M_RDATE" DATE NULL, -- 가입일,
      "M_FNAME" VARCHAR2(100) NULL,-- 파일이름,
      "M_OFNAME" VARCHAR2(100) NULL, -- 오리지널파일이름,
      "M_VERIFY" NUMBER NULL, -- 회원0/관리자9 확인,
      "M_ABOUT" VARCHAR2(200) -- 소개글
);
-- 회원
ALTER TABLE "MEMBER"
   ADD CONSTRAINT "PK_MEMBER" -- 회원 기본키
   PRIMARY KEY (
      "M_ID" -- 회원id
   );

-- 댓글
CREATE TABLE "REPLY" (
      "RE_ID" NUMBER NOT NULL, -- 댓글id,
      "RE_WRITER" VARCHAR2(20) NULL, -- 작성자,
      "RE_CONTENT" VARCHAR2(500) NULL, -- 내용,
      "RE_RDATE" DATE NULL, -- 작성일,
      "B_ID" NUMBER NOT NULL -- 글id
);

-- 댓글
ALTER TABLE "REPLY"
   ADD CONSTRAINT "PK_REPLY" -- 댓글 기본키
   PRIMARY KEY (
      "RE_ID" -- 댓글id
   );

-- 문의하기
create table SUPPORT (
    S_ID NUMBER NOT NULL,               -- 문의ID
    S_SUBJECT VARCHAR2(100) NOT NULL,   -- 문의자
    S_CONTENT VARCHAR2(500) NOT NULL,   -- 문의내용
    S_RDATE DATE NOT NULL,              -- 문의날짜
    M_ID NUMBER,                        -- 회원ID
    ORIGIN_NO NUMBER,
    GROUP_ORD NUMBER
);

--외래키

-- 게시판
ALTER TABLE "BOARD"
   ADD CONSTRAINT "FK_MEMBER_TO_BOARD" -- 회원 -> 게시판
   FOREIGN KEY (
      "M_ID" -- 회원id
   )
   REFERENCES "MEMBER" ( -- 회원
      "M_ID" -- 회원id
   )ON DELETE CASCADE;


-- 플래너
ALTER TABLE "PLANNER"
   ADD CONSTRAINT "FK_MEMBER_TO_PLANNER" -- 회원 -> 플래너
   FOREIGN KEY (
      "M_ID" -- 회원id
   )
   REFERENCES "MEMBER" ( -- 회원
      "M_ID" -- 회원id
   )ON DELETE CASCADE;
 
 -- 세부플래너
ALTER TABLE S_PLANNER
   ADD CONSTRAINT "FK_TOURITEMS_TO_S_PLANNER" -- 관광지 -> 세부플래너
   FOREIGN KEY (
      contentid -- 관광지id
   )
   REFERENCES TOURITEMS ( -- 관광지
      contentid -- 관광지id
   )ON DELETE CASCADE;

-- 세부플래너
ALTER TABLE "S_PLANNER"
   ADD CONSTRAINT "FK_PLANNER_TO_S_PLANNER" -- 플래너 -> 세부플래너
   FOREIGN KEY (
      "P_ID" -- 플래너id
   )
   REFERENCES "PLANNER" ( -- 플래너
      "P_ID"
   )ON DELETE CASCADE;

-- 댓글
ALTER TABLE "REPLY"
   ADD CONSTRAINT "FK_BOARD_TO_REPLY" -- 게시판 -> 댓글
   FOREIGN KEY (
      "B_ID" -- 글id
   )
   REFERENCES "BOARD" ( -- 게시판
      "B_ID" -- 글id
   )ON DELETE CASCADE;
   
ALTER TABLE "LIKE_T"
   ADD CONSTRAINT "FK_BOARD_TO_LIKE_T" 
   FOREIGN KEY (
      "B_ID" 
   )
   REFERENCES "BOARD" ( 
      "B_ID" 
   )ON DELETE CASCADE; 

ALTER TABLE "LIKE_T"
   ADD CONSTRAINT "FK_MEMBER_TO_LIKE_T" 
   FOREIGN KEY (
      "M_ID" 
   )
   REFERENCES "MEMBER" (
      "M_ID" 
   )ON DELETE CASCADE;

-- 문의하기
alter table SUPPORT
    add constraint "PK_SUPPORT"           -- 문의하기 기본키
    primary key(
        S_ID                            -- 문의ID
    );
    
-- 문의하기
ALTER TABLE "SUPPORT"
   ADD CONSTRAINT "FK_MEMBER_TO_SUPPORT" -- 회원 -> 문의하기
   FOREIGN KEY (
      "M_ID" -- 회원id
   )
   REFERENCES "MEMBER" ( -- 회원
      "M_ID" -- 회원id
   )ON DELETE CASCADE;


--시쿼스 생성

--댓글
CREATE SEQUENCE REPLY_ID
INCREMENT BY 1
START WITH 1
nocache;

--게시판
CREATE SEQUENCE BOARD_ID
INCREMENT BY 1
START WITH 1
nocache;

--플래너
CREATE SEQUENCE PLANNER_ID
INCREMENT BY 1
START WITH 1
nocache;

--세부플래너
CREATE SEQUENCE S_PLANNER_ID
INCREMENT BY 1
START WITH 1
nocache;

--회원
CREATE SEQUENCE MEMBER_ID
INCREMENT BY 1
START WITH 1
nocache;

--좋아요
CREATE SEQUENCE LIKE_ID
INCREMENT BY 1
START WITH 1
nocache;

create sequence SUPPORT_ID increment by 1 start with 1 nocache; 
create sequence SUPPORT_ORIGIN_NO increment by 1 start with 1 nocache; 

alter table reply add(re_fname VARCHAR(100));
alter table PLANNER add(P_TITLE VARCHAR2(200), P_MSIZE VARCHAR2(20), P_CONCEPT VARCHAR2(50));




--회원
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'sin@naver.com', '1234', '신동오', '010-4232-6777', '남자', '88/12/04', '21/01/03', 'defaultProfile.png', 'defaultProfile.png', 0, '자바는 이식성과 호환성이 좋습니다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'seong@naver.com', '1234', '성진희', '010-4563-6664', '여자', '96/03/11', '21/01/03', 'defaultProfile.png', 'defaultProfile.png', 0, '저급언어:기계어, 어셈블리어가 있고, 고급언어:C, JAVA가 있다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'lim@naver.com', '1234', '임연지', '010-2234-5353', '여자', '97/04/07', '21/01/03','defaultProfile.png', 'defaultProfile.png', 0, '자바스크립트는 보안성과 성능이 떨어지지만 확장성이 좋다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'cha@naver.com', '1234', '차지현', '010-6567-8976', '여자', '99/02/03', '21/02/03', 'defaultProfile.png', 'defaultProfile.png', 0, '파이썬은 이식성이 좋고 인터프리터 언어/객체지향 언어/스크립트 언어이다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'yum@gmail.com', '1234',  '허유민', '010-5519-5448', '여자', '98/02/03', '21/02/03', 'defaultProfile.png', 'defaultProfile.png', 9, 'UI설계원칙은 직관성, 유효성, 학습성, 유연성이있다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'lee@gmail.com', '1234', '이지훈', '010-7535-8543', '남자', '95/05/05', SYSDATE, 'defaultProfile.png', 'defaultProfile.png', 9, '데이터의 흐름모델은 단말, 처리, 자료의흐름, 자료저장소가있다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'dragon@gmail.com', '1234', '이민용', '010-2344-4224', '남자', '90/05/05', SYSDATE, 'defaultProfile.png', 'defaultProfile.png', 9, '공통모듈명세기법은 정확성, 명확성, 완전성, 일관성, 추적성이있다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'kwon@gmail.com', '1234', '권성환', '010-9942-1123', '남자', '90/01/24', SYSDATE,'defaultProfile.png', 'defaultProfile.png', 9, 'STUB 하향식, DRIVER 상향식 임시제공 모듈통합이다.');
INSERT INTO MEMBER VALUES (MEMBER_ID.nextval, 'park@gmail.com', '1234', '박종범', '010-6664-3453', '남자', '90/11/11', SYSDATE, 'defaultProfile.png', 'defaultProfile.png', 9, 'STAF는 분산환경, xUnit은 Java C++, FitNesse 웹기반, Ruby 인터프리터방식이다.');
select * from member;


--게시판
INSERT INTO BOARD VALUES (BOARD_ID.nextval, '지훈이', '우왕1', '안냐세여','insteadimg.png', SYSDATE, '가족여행',0, 2, 0);
INSERT INTO BOARD VALUES (BOARD_ID.nextval, '종범이', '우왕2', '안냐세여','insteadimg.png', SYSDATE, '커플여행',0, 3, 0);
INSERT INTO BOARD VALUES (BOARD_ID.nextval, '민용이', '우왕3', '안냐세여','insteadimg.png', SYSDATE, '혼자여행',0, 4, 0);
INSERT INTO BOARD VALUES (BOARD_ID.nextval, '성환이', '우왕4', '안냐세여','insteadimg.png', SYSDATE, '가족여행',0, 5, 0);
INSERT INTO BOARD VALUES (BOARD_ID.nextval, '유민이', '우왕5', '안냐세여','insteadimg.png', SYSDATE, '패키지여행',0, 5, 0);
select * from BOARD;

--플래너
INSERT INTO PLANNER VALUES (PLANNER_ID.nextval, sysdate, 2,'배고픈여행','1인','혼자여행');
INSERT INTO PLANNER VALUES (PLANNER_ID.nextval, sysdate, 3,'컾뽈여행','2인','커플여행');
INSERT INTO PLANNER VALUES (PLANNER_ID.nextval, sysdate, 4,'케이크먹자','5인이상','패키지여행');
select * from PLANNER;

--세부플래너
insert into s_planner values(S_PLANNER_ID.nextval,1,'21-02-22','21-02-23','2044565',2);
insert into s_planner values(S_PLANNER_ID.nextval,1,'21-02-22','21-02-22','2401954',3);
insert into s_planner values(S_PLANNER_ID.nextval,1,'21-02-22','21-02-23','2518765',4);
insert into s_planner values(S_PLANNER_ID.nextval,2,'21-02-22','21-02-23','2360786',4);
insert into s_planner values(S_PLANNER_ID.nextval,2,'21-02-22','21-02-23','2662318',4);
select * from s_planner;

--댓글
INSERT INTO reply VALUES (REPLY_ID.nextval, '유민이', '나는유민5', SYSDATE,2,'defaultProfile.png');
INSERT INTO reply VALUES (REPLY_ID.nextval, '지훈이', '나는지훈', SYSDATE,2,'defaultProfile.png');
INSERT INTO reply VALUES (REPLY_ID.nextval, '성환이', '나는성환', SYSDATE,3,'defaultProfile.png');
INSERT INTO reply VALUES (REPLY_ID.nextval, '민용이', '나는민용', SYSDATE,4,'defaultProfile.png');
INSERT INTO reply VALUES (REPLY_ID.nextval, '종범이', '나는종범', SYSDATE,5,'defaultProfile.png');
select * from reply;

--문의
INSERT INTO SUPPORT VALUES (SUPPORT_ID.nextval, '매번 좋은정보 얻고갑니다!', '오디가.com때문에 여행 갈 때 계획을 짤 수있어서 좋습니다!', SYSDATE, 2, SUPPORT_ORIGIN_NO.nextval, 0);
INSERT INTO SUPPORT VALUES (SUPPORT_ID.nextval, '제주 애월쪽 정보를 더알고싶어요!', '오디가.com때문에 여행 갈 때 계획을 짤 수있어서 좋습니다!', SYSDATE, 3, SUPPORT_ORIGIN_NO.nextval, 0);
INSERT INTO SUPPORT VALUES (SUPPORT_ID.nextval, '모바일과 연동되나요 ?!', '오디가.com때문에 여행 갈 때 계획을 짤 수있어서 좋습니다!', SYSDATE, 4, SUPPORT_ORIGIN_NO.nextval, 0);
INSERT INTO SUPPORT VALUES (SUPPORT_ID.nextval, '정말 사이트 예뻐요!', '오디가.com때문에 여행 갈 때 계획을 짤 수있어서 좋습니다!', SYSDATE, 5, SUPPORT_ORIGIN_NO.nextval, 0);
select * from support;
commit;

select * from member;

select * from SUPPORT natural join MEMBER where ORIGIN_NO IN(select ORIGIN_NO from support where m_id=2) order by ORIGIN_NO desc, GROUP_ORD asc;